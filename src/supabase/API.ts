/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/spaces': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.spaces.id'];
          created_at?: parameters['rowFilter.spaces.created_at'];
          title?: parameters['rowFilter.spaces.title'];
          description?: parameters['rowFilter.spaces.description'];
          author?: parameters['rowFilter.spaces.author'];
          file_door?: parameters['rowFilter.spaces.file_door'];
          file_space?: parameters['rowFilter.spaces.file_space'];
          verified?: parameters['rowFilter.spaces.verified'];
          location?: parameters['rowFilter.spaces.location'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['spaces'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** spaces */
          spaces?: definitions['spaces'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.spaces.id'];
          created_at?: parameters['rowFilter.spaces.created_at'];
          title?: parameters['rowFilter.spaces.title'];
          description?: parameters['rowFilter.spaces.description'];
          author?: parameters['rowFilter.spaces.author'];
          file_door?: parameters['rowFilter.spaces.file_door'];
          file_space?: parameters['rowFilter.spaces.file_space'];
          verified?: parameters['rowFilter.spaces.verified'];
          location?: parameters['rowFilter.spaces.location'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.spaces.id'];
          created_at?: parameters['rowFilter.spaces.created_at'];
          title?: parameters['rowFilter.spaces.title'];
          description?: parameters['rowFilter.spaces.description'];
          author?: parameters['rowFilter.spaces.author'];
          file_door?: parameters['rowFilter.spaces.file_door'];
          file_space?: parameters['rowFilter.spaces.file_space'];
          verified?: parameters['rowFilter.spaces.verified'];
          location?: parameters['rowFilter.spaces.location'];
        };
        body: {
          /** spaces */
          spaces?: definitions['spaces'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/tags': {
    get: {
      parameters: {
        query: {
          type?: parameters['rowFilter.tags.type'];
          title?: parameters['rowFilter.tags.title'];
          code?: parameters['rowFilter.tags.code'];
          created_at?: parameters['rowFilter.tags.created_at'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['tags'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tags */
          tags?: definitions['tags'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          type?: parameters['rowFilter.tags.type'];
          title?: parameters['rowFilter.tags.title'];
          code?: parameters['rowFilter.tags.code'];
          created_at?: parameters['rowFilter.tags.created_at'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          type?: parameters['rowFilter.tags.type'];
          title?: parameters['rowFilter.tags.title'];
          code?: parameters['rowFilter.tags.code'];
          created_at?: parameters['rowFilter.tags.created_at'];
        };
        body: {
          /** tags */
          tags?: definitions['tags'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Personal spaces on the site */
  spaces: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: text */
    title: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    author?: string;
    /** Format: jsonb */
    file_door?: unknown;
    /** Format: jsonb */
    file_space: unknown;
    /**
     * Format: boolean
     * @default false
     */
    verified: boolean;
    /** Format: text */
    location?: string;
  };
  /** @description Tags to be applied to spaces */
  tags: {
    /** Format: character varying */
    type?: string;
    /** Format: text */
    title?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    code: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description spaces */
  'body.spaces': definitions['spaces'];
  /** Format: uuid */
  'rowFilter.spaces.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.spaces.created_at': string;
  /** Format: text */
  'rowFilter.spaces.title': string;
  /** Format: text */
  'rowFilter.spaces.description': string;
  /** Format: text */
  'rowFilter.spaces.author': string;
  /** Format: jsonb */
  'rowFilter.spaces.file_door': string;
  /** Format: jsonb */
  'rowFilter.spaces.file_space': string;
  /** Format: boolean */
  'rowFilter.spaces.verified': string;
  /** Format: text */
  'rowFilter.spaces.location': string;
  /** @description tags */
  'body.tags': definitions['tags'];
  /** Format: character varying */
  'rowFilter.tags.type': string;
  /** Format: text */
  'rowFilter.tags.title': string;
  /** Format: character varying */
  'rowFilter.tags.code': string;
  /** Format: timestamp with time zone */
  'rowFilter.tags.created_at': string;
}

export interface operations {}

export interface external {}
